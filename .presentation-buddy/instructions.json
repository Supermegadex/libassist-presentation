[
  {
    "type": "createFile",
    "path": "example.ladoc"
  },
  {
    "type": "typeText",
    "text": [
      "+++project",
      "name: Express",
      "package: com.node.express",
      "+++"
    ]
  },
  {
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "typeText",
    "text": [
      "",
      "",
      "+++section",
      "title: About",
      "+++"
    ]
  },
  {
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "typeText",
    "text": [
      "",
      "",
      "## Fast, unopinionated, minimalist web framework for [Node.js](https://nodejs.org)",
      "",
      "`npm i express`",
      "",
      "#### Web Applications",
      ""
    ]
  },
  {
    "type": "typeText",
    "delay": 0,
    "text": [
      "Express is a minimal and flexible Node.js web application framework that provides a robust set of features for web and mobile applications.",
      "",
      "#### APIs",
      "With a myriad of HTTP utility methods and middleware at your disposal, creating a robust API is quick and easy.",
      "",
      "#### Performance",
      "Express provides a thin layer of fundamental web application features, without obscuring Node.js features that you know and love.",
      "",
      "#### Frameworks",
      "Many [popular frameworks](http://expressjs.com/en/resources/frameworks.html) are based on Express."
    ]
  },
  {
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "createFile",
    "path": "hello-world.ladoc"
  },
  {
    "type": "typeText",
    "text": [
      "+++section",
      "title: Hello, world!",
      "+++",
      "",
      "+++example",
      "name: Hello, world!",
      "template: node",
      "ports: 3000:3000",
      "+++",
      "",
      ""
    ]
  },
  {
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "typeText",
    "delay": 10,
    "text": [
      "```javascript:app.js",
      "const express = require('express');",
      "const app = express();",
      "const port = 3000;",
      "",
      "app.get('/', (req, res) => res.send('Hello World!'));",
      "",
      "app.listen(port, () => console.log(`Example app listening on port ${port}!`));",
      "```"
    ]
  },
  {
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "typeText",
    "delay": 10,
    "text": [
      "{",
      "  \"name\": \"express-hello-world\",",
      "  \"version\": \"1.0.0\",",
      "  \"description\": \"\",",
      "  \"main\": \"app.js\",",
      "  \"scripts\": {",
      "    \"start\": \"node app.js\"",
      "  },",
      "  \"author\": \"\",",
      "  \"license\": \"ISC\",",
      "  \"dependencies\": {",
      "    \"express\": \"latest\"",
      "  }",
      "}"
    ]
  },
  {
    "type": "wait",
    "delay": "manual"
  },
  {
    "type": "openFile",
    "path": "example.ladoc"
  },
  {
    "type": "typeText",
    "text": [
      "",
      "",
      "+++include",
      "file: wello-world",
      "+++"
    ]
  }
]
